{"version":3,"sources":["../goit-react-hw-01-components/src/components/SocialMediaProfile/Profile.module.css","../goit-react-hw-01-components/src/components/friends-list/FriendList.module.css","../goit-react-hw-01-components/src/components/statistics/Statistics.module.css","../goit-react-hw-01-components/src/components/transaction/Transaction.module.css","../goit-react-hw-01-components/src/components/SocialMediaProfile/Profile.js","../goit-react-hw-01-components/src/components/statistics/randomColor.js","../goit-react-hw-01-components/src/components/statistics/Statistics.js","../goit-react-hw-01-components/src/components/friends-list/FriendListItem.js","../goit-react-hw-01-components/src/components/friends-list/FriendList.js","../goit-react-hw-01-components/src/components/transaction/TransactionHistory.js","../goit-react-hw-01-components/src/App.js","../goit-react-hw-01-components/src/index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","followers","views","likes","className","styles","profile","description","src","width","alt","item","label","quantity","randomColor","r","Math","floor","random","g","b","toString","Statistics","title","statistics","statList","map","stat","style","backgroundColor","percentage","id","FriendListItem","isOnline","online","offline","FriendList","friends","friend","TransactionHistory","items","s","transactionHistory","headLine","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,KAAO,sBAAsB,IAAM,qBAAqB,SAAW,0BAA0B,MAAQ,uBAAuB,KAAO,sBAAsB,MAAQ,uBAAuB,SAAW,4B,gBCApUD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,OAAS,2BAA2B,KAAO,yBAAyB,SAAW,6BAA6B,OAAS,sDAAsD,QAAU,yD,4PCAvOD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,SAAW,6BAA6B,KAAO,2B,iBCA/ID,EAAOC,QAAU,CAAC,mBAAqB,wCAAwC,SAAW,8BAA8B,KAAO,4B,k+FCEhH,SAASC,EAAT,GAA0D,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,IAAKC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,MACnDC,EAA4BD,EAA5BC,UAAWC,EAAiBF,EAAjBE,MAAOC,EAAUH,EAAVG,MAC1B,OACI,sBAAKC,UAAWC,IAAOC,QAAvB,UACN,sBAAKF,UAAWC,IAAOE,YAAvB,UACE,qBACEC,IAAKT,EAAQU,MAAM,MACnBC,IAAI,gHACJN,UAAWC,IAAON,SAEpB,mBAAGK,UAAWC,IAAOT,KAArB,SAA4BA,IAC5B,oBAAGQ,UAAWC,IAAOR,IAArB,cAA4BA,KAC5B,mBAAGO,UAAWC,IAAOP,SAArB,SAAgCA,OAGlC,qBAAIM,UAAWC,IAAOL,MAAtB,UACE,qBAAII,UAAWC,IAAOM,KAAtB,UACE,sBAAMP,UAAWC,IAAOO,MAAxB,uBACA,sBAAMR,UAAWC,IAAOQ,SAAxB,SAAmCZ,OAErC,qBAAIG,UAAWC,IAAOM,KAAtB,UACE,sBAAMP,UAAWC,IAAOO,MAAxB,mBACF,sBAAMR,UAAWC,IAAOQ,SAAxB,SAAmCX,OAEnC,qBAAIE,UAAWC,IAAOM,KAAtB,UACE,sBAAMP,UAAWC,IAAOO,MAAxB,mBACA,sBAAMR,UAAWC,IAAOQ,SAAxB,SAAmCV,a,2BC7B1B,SAASW,IACpB,IAAMC,EAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACtBC,EAAIH,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBE,EAAIJ,KAAKC,MAAsB,IAAhBD,KAAKE,UAG1B,MAFc,IAAMH,EAAEM,SAAS,IAAMF,EAAEE,SAAS,IAAMD,EAAEC,SAAS,ICCpD,SAASC,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,MAAOvB,EAAS,EAATA,MACxC,OACI,0BAASI,UAAWC,IAAOmB,WAA3B,UACED,GAAS,oBAAInB,UAAWC,IAAOkB,MAAtB,0BACP,oBAAInB,UAAWC,IAAOoB,SAAtB,SACKzB,EAAM0B,KAAI,SAAAC,GAAI,OACX,qBAAIvB,UAAWC,IAAOM,KACJiB,MAAO,CAACC,gBAAiBf,KAD3C,UAEI,sBAAMV,UAAU,QAAhB,SAAyBuB,EAAKf,QAC9B,uBAAMR,UAAU,aAAhB,UAA8BuB,EAAKG,WAAnC,SAFKH,EAAKI,Y,4BCRnB,SAASC,EAAT,GAAqD,IAA3BjC,EAA0B,EAA1BA,OAAQH,EAAkB,EAAlBA,KAAMqC,EAAY,EAAZA,SACnD,OACI,qCACI,sBAAM7B,UAAW6B,EAAW5B,IAAO6B,OAAS7B,IAAO8B,QAAnD,SAA6DF,IAC7D,qBAAK7B,UAAWC,IAAON,OAAQS,IAAKT,EAAQW,IAAKd,EAAMa,MAAM,OAC7D,mBAAGL,UAAWC,IAAOT,KAArB,SAA4BA,OCJzB,SAASwC,EAAT,GAAkC,IAAZC,EAAW,EAAXA,QACjC,OACJ,oBAAIjC,UAAU,cAAd,SACKiC,EAAQX,KAAI,SAAAY,GAAM,OACnB,oBAAIlC,UAAWC,IAAOM,KAAtB,SACA,cAACqB,EAAD,CACEC,SAAUK,EAAOL,SACjBlC,OAAQuC,EAAOvC,OACfH,KAAM0C,EAAO1C,QAJkB0C,EAAOP,S,4BCN7B,SAASQ,EAAT,GAAsC,IAATC,EAAQ,EAARA,MACxC,OACI,wBAAOpC,UAAWqC,IAAEC,mBAApB,UACI,gCACI,qBAAItC,UAAWqC,IAAEE,SAAjB,UACI,sCACA,wCACA,+CAIR,gCACKH,EAAMd,KAAI,SAAAf,GAAI,OACX,qBAAIP,UAAWqC,IAAE9B,KAAjB,UACI,6BAAKA,EAAKiC,OACV,6BAAKjC,EAAKkC,SACV,6BAAKlC,EAAKmC,aAHcnC,EAAKoB,YCJtC,SAASgB,IACtB,OACE,gCAEA,cAACpD,EAAD,CACEC,KAAMoD,EAAKpD,KACXC,IAAKmD,EAAKnD,IACVC,SAAUkD,EAAKlD,SACfC,OAAQiD,EAAKjD,OACbC,MAAOgD,EAAKhD,QAGd,cAACsB,EAAD,CAAYC,MAAM,eAAevB,MAAOiD,IAGtC,cAACb,EAAD,CAAYC,QAASA,IAErB,cAACE,EAAD,CAAoBC,MAAOU,OCxBjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACN,EAAD,MAEFO,SAASC,eAAe,W","file":"static/js/main.4a1c479b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__Wbjxm\",\"description\":\"Profile_description__yIKG3\",\"avatar\":\"Profile_avatar__2yl7i\",\"name\":\"Profile_name__280XY\",\"tag\":\"Profile_tag__JeWTV\",\"location\":\"Profile_location__9YLvD\",\"stats\":\"Profile_stats__11EhC\",\"item\":\"Profile_item___HPK6\",\"label\":\"Profile_label__3tVbM\",\"quantity\":\"Profile_quantity__ixqaQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendList_item__2tiTL\",\"avatar\":\"FriendList_avatar__1Y_Pj\",\"name\":\"FriendList_name__l_rYJ\",\"isOnline\":\"FriendList_isOnline__2pEFM\",\"online\":\"FriendList_online__2ikok FriendList_isOnline__2pEFM\",\"offline\":\"FriendList_offline__1omxs FriendList_isOnline__2pEFM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1G8AH\",\"title\":\"Statistics_title__r3CCj\",\"statList\":\"Statistics_statList__33tnY\",\"item\":\"Statistics_item__V5txQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"Transaction_transactionHistory__2M460\",\"headLine\":\"Transaction_headLine__2QR1j\",\"item\":\"Transaction_item__3eFo-\"};","import PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\n\nexport default function Profile({ name, tag, location, avatar, stats }) {\n    const { followers, views, likes } = stats;\n    return (\n        <div className={styles.profile}>\n  <div className={styles.description}>\n    <img\n      src={avatar} width=\"240\"\n      alt=\"Аватар пользователя\"\n      className={styles.avatar}\n    />\n    <p className={styles.name}>{name}</p>\n    <p className={styles.tag}>@{tag}</p>\n    <p className={styles.location}>{location}</p>\n  </div>\n\n  <ul className={styles.stats}>\n    <li className={styles.item}>\n      <span className={styles.label}>Followers</span>\n      <span className={styles.quantity}>{followers}</span>\n    </li>\n    <li className={styles.item}>\n      <span className={styles.label}>Views</span>\n    <span className={styles.quantity}>{views}</span>\n    </li>\n    <li className={styles.item}>\n      <span className={styles.label}>Likes</span>\n      <span className={styles.quantity}>{likes}</span>\n    </li>\n  </ul>\n</div>\n    )\n}\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired\n  }),\n}","export default function randomColor() {\n    const r = Math.floor(Math.random() * 256);\n  const g = Math.floor(Math.random() * 256);\n  const b = Math.floor(Math.random() * 256);\n  const color = '#' + r.toString(16) + g.toString(16) + b.toString(16);\n\n  return color;\n}","import PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\nimport randomColor from './randomColor';\n\n\nexport default function Statistics({ title, stats }) {\n    return (\n        <section className={styles.statistics} >\n         {title && <h2 className={styles.title}>Upload stats</h2>}\n            <ul className={styles.statList}>\n                {stats.map(stat => (\n                    <li className={styles.item}\n                        key={stat.id} style={{backgroundColor: randomColor()}}>\n                        <span className=\"label\">{stat.label}</span>\n                        <span className=\"percentage\">{stat.percentage}%</span>\n                    </li>\n                ))}\n            </ul>\n        </section>\n    );\n}\n\nStatistics.propTypes = {\n    title: PropTypes.string,\n    stats: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            label: PropTypes.string.isRequired,\n            percentage: PropTypes.number.isRequired,\n        }),\n    ),\n};","import PropTypes from 'prop-types';\nimport styles from './FriendList.module.css';\n\n\nexport default function FriendListItem({ avatar, name, isOnline }) {\n    return (\n        <>\n            <span className={isOnline ? styles.online : styles.offline}>{isOnline}</span>\n            <img className={styles.avatar} src={avatar} alt={name} width=\"60\" />\n            <p className={styles.name}>{name}</p>\n        </>\n    );\n}\n\nFriendListItem.propTypes = {\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired\n};","import PropTypes from 'prop-types';\nimport FriendListItems from './FriendListItem';\nimport styles from './FriendList.module.css';\n\n\nexport default function FriendList({ friends }) {\n    return (\n<ul className=\"friend-list\">\n    {friends.map(friend => (\n    <li className={styles.item} key={friend.id}>\n    <FriendListItems\n      isOnline={friend.isOnline}\n      avatar={friend.avatar}\n      name={friend.name}\n    />\n    </li>\n    ))}\n</ul>\n    );\n}\n\nFriendList.propTypes = {\n    friends: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n        }),\n    ),\n};\n","import PropTypes from 'prop-types';\nimport s from './Transaction.module.css';\n\nexport default function TransactionHistory({items}) {\n    return (\n        <table className={s.transactionHistory}>\n            <thead>\n                <tr className={s.headLine}>\n                    <th>Type</th>\n                    <th>Amount</th>\n                    <th>Currency</th>\n                </tr>\n            </thead>\n            \n            <tbody>\n                {items.map(item => (\n                    <tr className={s.item} key={item.id}>\n                        <td>{item.type}</td>\n                        <td>{item.amount}</td>\n                        <td>{item.currency}</td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    );\n}\n\nTransactionHistory.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            type: PropTypes.string.isRequired,\n            amount: PropTypes.string.isRequired,\n            currency: PropTypes.string.isRequired\n        }),\n    ),\n}","import user from './components/SocialMediaProfile/user.json';\nimport Profile from './components/SocialMediaProfile/Profile';\n\nimport statisticalData from './components/statistics/statistical-data.json';\nimport Statistics from './components/statistics/Statistics';\n\nimport friends from './components/friends-list/friends.json';\nimport FriendList from './components/friends-list/FriendList';\n\nimport transactions from './components/transaction/transactions.json';\nimport TransactionHistory from './components/transaction/TransactionHistory';\n\nexport default function App() {\n  return (\n    <div> \n    {}\n    <Profile\n      name={user.name}\n      tag={user.tag}\n      location={user.location}\n      avatar={user.avatar}\n      stats={user.stats}\n    />\n    {}\n    <Statistics title=\"Upload stats\" stats={statisticalData}/>\n      {/* <Statistics stats={statisticalData} /> */}\n      {}\n      <FriendList friends={friends} />\n      {}\n      <TransactionHistory items={transactions} />\n\n    </div>\n  \n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}